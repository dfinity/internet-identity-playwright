name: Tests

on:
  pull_request:
  workflow_dispatch:

jobs:
  tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Prepare
        uses: ./.github/actions/prepare
      - name: Install demo dependencies
        run: npm ci
        working-directory: demo
      - name: Install Juno CLI
        run: npm i -g @junobuild/cli
      - name: Cache Docker layers for default image
        uses: actions/cache@v3
        with:
          path: /home/runner/.docker
          key: ${{ runner.os }}-docker-default-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-docker-default-
      - name: Run emulator
        run: |
          cd demo
          set -e
          juno dev start --headless &
          juno dev wait
          juno login --emulator --mode development --headless
          juno config --mode development --headless
      - name: Run default tests
        run: |
          cd ..
          npm run e2e:ci

  tests_captcha:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Prepare
        uses: ./.github/actions/prepare
      - name: Install demo dependencies
        run: npm ci
        working-directory: demo
      - name: Cache Docker layers for captcha image
        uses: actions/cache@v3
        with:
          path: /home/runner/.docker
          key: ${{ runner.os }}-docker-captcha-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-docker-captcha-
      - name: Run tests with captcha
        run: |
          cd demo
          docker compose -f docker-compose.captcha.yml up -d
          cd ..
          npm run e2e:captcha:ci

  tests_passkey:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Prepare
        uses: ./.github/actions/prepare
      - name: Install demo dependencies
        run: npm ci
        working-directory: demo
      - name: Cache Docker layers for passkey image
        uses: actions/cache@v3
        with:
          path: /home/runner/.docker
          key: ${{ runner.os }}-docker-passkey-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-docker-passkey-
      - name: Run tests with passkey
        run: |
          cd demo
          docker compose -f docker-compose.passkey.yml up -d
          cd ..
          npm run e2e:passkey:ci

  may-merge:
    needs: ['tests', 'tests_captcha', 'tests_passkey']
    runs-on: ubuntu-latest
    steps:
      - name: Cleared for merging
        run: echo OK
